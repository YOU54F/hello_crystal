crystal_source_task:
  only_if: $CIRRUS_CHANGE_TITLE =~ 'ci\(crystal_gh_bin\).*'
  macos_instance:
    image: ghcr.io/cirruslabs/macos-ventura-vanilla:latest 
  crystal_install_script: |
    curl -L https://github.com/crystal-lang/crystal/releases/download/1.9.2/crystal-1.9.2-1-darwin-universal.tar.gz | tar xz
    mv crystal-1.9.2-1 ~/crystal
    chmod +x ~/crystal/bin/crystal
    ~/crystal/bin/crystal --version
    file ~/crystal/bin/crystal
    file ~/crystal/embedded/bin/crystal
    echo PATH=$PATH:~/crystal/bin >> $CIRRUS_ENV
  crystal_check_script: |
    crystal --version
  deps_script: | # homebrew will allow us to install xcode
    NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
    make libs
  build_script: |
    APP_NAME=hello
    crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD"
    ./$APP_NAME
    file $APP_NAME
    du -hs $APP_NAME
    otool -L $APP_NAME
    chmod +x check_dynamic_linking.sh && ./check_dynamic_linking.sh $APP_NAME
  fetch_ffi_script: |
    APP_NAME=fetch_ffi
    crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD -I$PWD/include"
    # crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L/Users/Admin/hello_crystal -I/Users/Admin/hello_crystal/include"
    file $APP_NAME
    du -hs $APP_NAME
    otool -L $APP_NAME
    chmod +x check_dynamic_linking.sh && ./check_dynamic_linking.sh $APP_NAME
    SSL_CERT_FILE=/private/etc/ssl/cert.pem ./$APP_NAME

macos_build_task:
  macos_instance:
    # image: ghcr.io/cirruslabs/macos-ventura-vanilla:latest
    image: crystal
  # brew_setup_script: |
  #   NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  #   echo HOMEBREW_PREFIX="/opt/homebrew" >> $CIRRUS_ENV
  #   echo HOMEBREW_CELLAR="/opt/homebrew/Cellar" >> $CIRRUS_ENV
  #   echo HOMEBREW_REPOSITORY="/opt/homebrew" >> $CIRRUS_ENV
  #   echo PATH="/opt/homebrew/bin:/opt/homebrew/sbin:${PATH}" >> $CIRRUS_ENV
  #   echo MANPATH="/opt/homebrew/share/man$:{MANPATH}" >> $CIRRUS_ENV
  #   echo INFOPATH="/opt/homebrew/share/info:${INFOPATH}" >> $CIRRUS_ENV
  # crystal_install_script: |
  #   brew install crystal
  #   crystal --version
  # crystal_static_libs_script: |
  #   make libs
  hello_script: |
    APP_NAME=hello
    # crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD"
    crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L/Users/Admin/hello_crystal -I/Users/Admin/hello_crystal/include"
    ./$APP_NAME
    file $APP_NAME
    du -hs $APP_NAME
    otool -L $APP_NAME
    chmod +x check_dynamic_linking.sh && ./check_dynamic_linking.sh $APP_NAME
    mkdir -p pkg
    mv $APP_NAME pkg
  fetch_ffi_script: |
    APP_NAME=fetch_ffi
    # crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD -I$PWD/include"
    crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L/Users/Admin/hello_crystal -I/Users/Admin/hello_crystal/include"
    file $APP_NAME
    du -hs $APP_NAME
    otool -L $APP_NAME
    chmod +x check_dynamic_linking.sh && ./check_dynamic_linking.sh $APP_NAME
    SSL_CERT_FILE=/private/etc/ssl/cert.pem ./$APP_NAME
    mkdir -p pkg
    mv $APP_NAME pkg
  ffi_script: |
    APP_NAME=ffi
    # crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD -lpact_ffi"
    crystal build --release bin/$APP_NAME.cr --no-debug --link-flags="-L$PWD -lpact_ffi -L/Users/Admin/hello_crystal -I/Users/Admin/hello_crystal/include"
    ./$APP_NAME
    file $APP_NAME
    du -hs $APP_NAME
    otool -L $APP_NAME
    chmod +x check_dynamic_linking.sh && EXTRA_LIBS=libpact_ffi.dylib ./check_dynamic_linking.sh $APP_NAME
    mkdir -p pkg
    mv $APP_NAME pkg
  binary_artifacts:
    path: "pkg/*"


macos_test_task:
  macos_instance:
    matrix:
      - image: crystal
      - image: ghcr.io/cirruslabs/macos-ventura-vanilla:latest
  bin_script: |
    find tmp/macos/binary/pkg -type f | xargs chmod +x
    mv tmp/macos/binary/pkg/* .
  hello_script: |
    APP_NAME=hello
    ./$APP_NAME
  fetch_ffi_script: |
    APP_NAME=fetch_ffi
    SSL_CERT_FILE=/private/etc/ssl/cert.pem ./$APP_NAME
  ffi_script: |
    APP_NAME=ffi
    ./$APP_NAME